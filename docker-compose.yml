version: '3'

networks:
  default:
    name: dsbd_private_network
    driver: bridge

services:

  microservice_1:
    image: etl_data_pipeline
    container_name: etl_data_pipeline_container
    build:
      context: ./microservice_1
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    depends_on:
      kafka:
        condition: service_healthy
    restart: always
    environment:
      PROMETHEUS_SERVER: http://15.160.61.227:29090
      INTERVAL_TIME_SECONDS: 600
      PATH_LOG_MONITOR: /usr/src/application/log/
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: prometheusdata
      PYTHONUNBUFFERED: 1
    volumes:
      - type: bind
        source: ./microservice_1/application/log
        target: /usr/src/application/log/
      - ./microservice_1/application:/usr/src/application:ro

  microservice_2:
    image: data_storage
    container_name: data_storage_container
    build:
      context: ./microservice_2
      dockerfile: Dockerfile
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: prometheusdata
      MYSQL_HOST: mysql
      PYTHONUNBUFFERED: 1
    volumes:
      - ./microservice_2/application:/usr/src/application:ro

  microservice_3:
    image: data_retrieval
    container_name: data_retrieval_container
    build:
      context: ./microservice_3
      dockerfile: Dockerfile
    ports:
      - 9003:9000
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      PYTHONUNBUFFERED: 1
    volumes:
      - ./microservice_3/application:/usr/src/application:ro

  microservice_4:
    image: sla_manager
    container_name: sla_manager_container
    build:
      context: ./microservice_4
      dockerfile: Dockerfile
    ports:
      - 9004:9000
    restart: always
    environment:
      DATA_STORAGE_GRPC_SERVER: microservice_2:50051
      ETL_DATA_PIPELINE_GRPC_SERVER: microservice_1:50051
      PYTHONUNBUFFERED: 1
    volumes:
      - ./microservice_4/application:/usr/src/application:ro

  mysql:
    image: mysql:latest
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: database
      #MYSQL_USER: user
      #MYSQL_PASSWORD: password
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3306"]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 20s

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_container
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 20s
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
